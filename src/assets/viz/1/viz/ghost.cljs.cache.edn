{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name viz.ghost, :imports nil, :requires {forest viz.forest, viz.forest viz.forest, grid viz.grid, viz.grid viz.grid, clojure.set clojure.set}, :uses nil, :defs {active-nodes {:protocol-inline nil, :meta {:file "/home/mediocregopher/src/viz/src/viz/ghost.cljs", :line 44, :column 7, :end-line 44, :end-column 19, :arglists (quote ([ghost]))}, :name viz.ghost/active-nodes, :variadic false, :file "/home/mediocregopher/src/viz/src/viz/ghost.cljs", :end-column 19, :method-params ([ghost]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ghost]))}, filter-active-nodes {:protocol-inline nil, :meta {:file "/home/mediocregopher/src/viz/src/viz/ghost.cljs", :line 47, :column 7, :end-line 47, :end-column 26, :arglists (quote ([ghost pred]))}, :name viz.ghost/filter-active-nodes, :variadic false, :file "/home/mediocregopher/src/viz/src/viz/ghost.cljs", :end-column 26, :method-params ([ghost pred]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 47, :end-line 47, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ghost pred]))}, spawn-children {:protocol-inline nil, :meta {:file "/home/mediocregopher/src/viz/src/viz/ghost.cljs", :line 25, :column 8, :end-line 25, :end-column 22, :private true, :arglists (quote ([ghost poss-fn id]))}, :private true, :name viz.ghost/spawn-children, :variadic false, :file "/home/mediocregopher/src/viz/src/viz/ghost.cljs", :end-column 22, :method-params ([ghost poss-fn id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 3, :fn-var true, :arglists (quote ([ghost poss-fn id]))}, spawn-children-multi {:protocol-inline nil, :meta {:file "/home/mediocregopher/src/viz/src/viz/ghost.cljs", :line 33, :column 8, :end-line 33, :end-column 28, :private true, :arglists (quote ([ghost poss-fn ids]))}, :private true, :name viz.ghost/spawn-children-multi, :variadic false, :file "/home/mediocregopher/src/viz/src/viz/ghost.cljs", :end-column 28, :method-params ([ghost poss-fn ids]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 3, :fn-var true, :arglists (quote ([ghost poss-fn ids]))}, incr {:protocol-inline nil, :meta {:file "/home/mediocregopher/src/viz/src/viz/ghost.cljs", :line 40, :column 7, :end-line 40, :end-column 11, :arglists (quote ([ghost poss-fn]))}, :name viz.ghost/incr, :variadic false, :file "/home/mediocregopher/src/viz/src/viz/ghost.cljs", :end-column 11, :method-params ([ghost poss-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 40, :end-line 40, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ghost poss-fn]))}, eg-poss-fn {:protocol-inline nil, :meta {:file "/home/mediocregopher/src/viz/src/viz/ghost.cljs", :line 63, :column 8, :end-line 63, :end-column 18, :private true, :arglists (quote ([pos adj-poss]))}, :private true, :name viz.ghost/eg-poss-fn, :variadic false, :file "/home/mediocregopher/src/viz/src/viz/ghost.cljs", :end-column 18, :method-params ([pos adj-poss]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 63, :end-line 63, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pos adj-poss]))}, gen-new-poss {:protocol-inline nil, :meta {:file "/home/mediocregopher/src/viz/src/viz/ghost.cljs", :line 19, :column 8, :end-line 19, :end-column 20, :private true, :arglists (quote ([ghost poss-fn id]))}, :private true, :name viz.ghost/gen-new-poss, :variadic false, :file "/home/mediocregopher/src/viz/src/viz/ghost.cljs", :end-column 20, :method-params ([ghost poss-fn id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 3, :fn-var true, :arglists (quote ([ghost poss-fn id]))}, new-ghost {:protocol-inline nil, :meta {:file "/home/mediocregopher/src/viz/src/viz/ghost.cljs", :line 6, :column 7, :end-line 6, :end-column 16, :arglists (quote ([grid-def]))}, :name viz.ghost/new-ghost, :variadic false, :file "/home/mediocregopher/src/viz/src/viz/ghost.cljs", :end-column 16, :method-params ([grid-def]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 1, :fn-var true, :arglists (quote ([grid-def]))}, remove-roots {:protocol-inline nil, :meta {:file "/home/mediocregopher/src/viz/src/viz/ghost.cljs", :line 52, :column 7, :end-line 52, :end-column 19, :arglists (quote ([ghost]))}, :name viz.ghost/remove-roots, :variadic false, :file "/home/mediocregopher/src/viz/src/viz/ghost.cljs", :end-column 19, :method-params ([ghost]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 52, :end-line 52, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ghost]))}, new-active-node {:protocol-inline nil, :meta {:file "/home/mediocregopher/src/viz/src/viz/ghost.cljs", :line 12, :column 7, :end-line 12, :end-column 22, :arglists (quote ([ghost pos]))}, :name viz.ghost/new-active-node, :variadic false, :file "/home/mediocregopher/src/viz/src/viz/ghost.cljs", :end-column 22, :method-params ([ghost pos]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ghost pos]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:active-node-ids :grid :pos :forest :nodes :id}, :order [:grid :forest :active-node-ids :pos :nodes :id]}, :doc nil}